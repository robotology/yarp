/*
 * SPDX-FileCopyrightText: 2006-2021 Istituto Italiano di Tecnologia (IIT)
 * SPDX-License-Identifier: BSD-3-Clause
 */

// Autogenerated by Thrift Compiler (0.14.1-yarped)
//
// This is an automatically generated file.
// It could get re-generated if the ALLOW_IDL_GENERATION flag is on.

#ifndef YARP_THRIFT_GENERATOR_STRUCT_SENSORSTREAMINGDATA_H
#define YARP_THRIFT_GENERATOR_STRUCT_SENSORSTREAMINGDATA_H

#include <yarp/dev/api.h>

#include <yarp/os/Wire.h>
#include <yarp/os/idl/WireTypes.h>
#include <yarp/dev/SensorMeasurements.h>

namespace yarp::dev {

class YARP_dev_API SensorStreamingData :
        public yarp::os::idl::WirePortable
{
public:
    // Fields
    SensorMeasurements ThreeAxisGyroscopes{};
    SensorMeasurements ThreeAxisLinearAccelerometers{};
    SensorMeasurements ThreeAxisMagnetometers{};
    SensorMeasurements OrientationSensors{};
    SensorMeasurements TemperatureSensors{};
    SensorMeasurements SixAxisForceTorqueSensors{};
    SensorMeasurements ContactLoadCellArrays{};
    SensorMeasurements EncoderArrays{};
    SensorMeasurements SkinPatches{};
    SensorMeasurements PositionSensors{};
    SensorMeasurements LinearVelocitySensors{};
    SensorMeasurements ThreeAxisAngularAccelerometers{};

    // Default constructor
    SensorStreamingData() = default;

    // Constructor with field values
    SensorStreamingData(const SensorMeasurements& ThreeAxisGyroscopes,
                        const SensorMeasurements& ThreeAxisLinearAccelerometers,
                        const SensorMeasurements& ThreeAxisMagnetometers,
                        const SensorMeasurements& OrientationSensors,
                        const SensorMeasurements& TemperatureSensors,
                        const SensorMeasurements& SixAxisForceTorqueSensors,
                        const SensorMeasurements& ContactLoadCellArrays,
                        const SensorMeasurements& EncoderArrays,
                        const SensorMeasurements& SkinPatches,
                        const SensorMeasurements& PositionSensors,
                        const SensorMeasurements& LinearVelocitySensors,
                        const SensorMeasurements& ThreeAxisAngularAccelerometers);

    // Read structure on a Wire
    bool read(yarp::os::idl::WireReader& reader) override;

    // Read structure on a Connection
    bool read(yarp::os::ConnectionReader& connection) override;

    // Write structure on a Wire
    bool write(const yarp::os::idl::WireWriter& writer) const override;

    // Write structure on a Connection
    bool write(yarp::os::ConnectionWriter& connection) const override;

    // Convert to a printable string
    std::string toString() const;

    // If you want to serialize this class without nesting, use this helper
    typedef yarp::os::idl::Unwrapped<SensorStreamingData> unwrapped;

private:
    // read/write ThreeAxisGyroscopes field
    bool read_ThreeAxisGyroscopes(yarp::os::idl::WireReader& reader);
    bool write_ThreeAxisGyroscopes(const yarp::os::idl::WireWriter& writer) const;
    bool nested_read_ThreeAxisGyroscopes(yarp::os::idl::WireReader& reader);
    bool nested_write_ThreeAxisGyroscopes(const yarp::os::idl::WireWriter& writer) const;

    // read/write ThreeAxisLinearAccelerometers field
    bool read_ThreeAxisLinearAccelerometers(yarp::os::idl::WireReader& reader);
    bool write_ThreeAxisLinearAccelerometers(const yarp::os::idl::WireWriter& writer) const;
    bool nested_read_ThreeAxisLinearAccelerometers(yarp::os::idl::WireReader& reader);
    bool nested_write_ThreeAxisLinearAccelerometers(const yarp::os::idl::WireWriter& writer) const;

    // read/write ThreeAxisMagnetometers field
    bool read_ThreeAxisMagnetometers(yarp::os::idl::WireReader& reader);
    bool write_ThreeAxisMagnetometers(const yarp::os::idl::WireWriter& writer) const;
    bool nested_read_ThreeAxisMagnetometers(yarp::os::idl::WireReader& reader);
    bool nested_write_ThreeAxisMagnetometers(const yarp::os::idl::WireWriter& writer) const;

    // read/write OrientationSensors field
    bool read_OrientationSensors(yarp::os::idl::WireReader& reader);
    bool write_OrientationSensors(const yarp::os::idl::WireWriter& writer) const;
    bool nested_read_OrientationSensors(yarp::os::idl::WireReader& reader);
    bool nested_write_OrientationSensors(const yarp::os::idl::WireWriter& writer) const;

    // read/write TemperatureSensors field
    bool read_TemperatureSensors(yarp::os::idl::WireReader& reader);
    bool write_TemperatureSensors(const yarp::os::idl::WireWriter& writer) const;
    bool nested_read_TemperatureSensors(yarp::os::idl::WireReader& reader);
    bool nested_write_TemperatureSensors(const yarp::os::idl::WireWriter& writer) const;

    // read/write SixAxisForceTorqueSensors field
    bool read_SixAxisForceTorqueSensors(yarp::os::idl::WireReader& reader);
    bool write_SixAxisForceTorqueSensors(const yarp::os::idl::WireWriter& writer) const;
    bool nested_read_SixAxisForceTorqueSensors(yarp::os::idl::WireReader& reader);
    bool nested_write_SixAxisForceTorqueSensors(const yarp::os::idl::WireWriter& writer) const;

    // read/write ContactLoadCellArrays field
    bool read_ContactLoadCellArrays(yarp::os::idl::WireReader& reader);
    bool write_ContactLoadCellArrays(const yarp::os::idl::WireWriter& writer) const;
    bool nested_read_ContactLoadCellArrays(yarp::os::idl::WireReader& reader);
    bool nested_write_ContactLoadCellArrays(const yarp::os::idl::WireWriter& writer) const;

    // read/write EncoderArrays field
    bool read_EncoderArrays(yarp::os::idl::WireReader& reader);
    bool write_EncoderArrays(const yarp::os::idl::WireWriter& writer) const;
    bool nested_read_EncoderArrays(yarp::os::idl::WireReader& reader);
    bool nested_write_EncoderArrays(const yarp::os::idl::WireWriter& writer) const;

    // read/write SkinPatches field
    bool read_SkinPatches(yarp::os::idl::WireReader& reader);
    bool write_SkinPatches(const yarp::os::idl::WireWriter& writer) const;
    bool nested_read_SkinPatches(yarp::os::idl::WireReader& reader);
    bool nested_write_SkinPatches(const yarp::os::idl::WireWriter& writer) const;

    // read/write PositionSensors field
    bool read_PositionSensors(yarp::os::idl::WireReader& reader);
    bool write_PositionSensors(const yarp::os::idl::WireWriter& writer) const;
    bool nested_read_PositionSensors(yarp::os::idl::WireReader& reader);
    bool nested_write_PositionSensors(const yarp::os::idl::WireWriter& writer) const;

    // read/write LinearVelocitySensors field
    bool read_LinearVelocitySensors(yarp::os::idl::WireReader& reader);
    bool write_LinearVelocitySensors(const yarp::os::idl::WireWriter& writer) const;
    bool nested_read_LinearVelocitySensors(yarp::os::idl::WireReader& reader);
    bool nested_write_LinearVelocitySensors(const yarp::os::idl::WireWriter& writer) const;

    // read/write ThreeAxisAngularAccelerometers field
    bool read_ThreeAxisAngularAccelerometers(yarp::os::idl::WireReader& reader);
    bool write_ThreeAxisAngularAccelerometers(const yarp::os::idl::WireWriter& writer) const;
    bool nested_read_ThreeAxisAngularAccelerometers(yarp::os::idl::WireReader& reader);
    bool nested_write_ThreeAxisAngularAccelerometers(const yarp::os::idl::WireWriter& writer) const;
};

} // namespace yarp::dev

#endif // YARP_THRIFT_GENERATOR_STRUCT_SENSORSTREAMINGDATA_H

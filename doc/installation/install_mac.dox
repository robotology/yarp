/*
 * Copyright (C) 2015 iCub Facility, Istituto Italiano di Tecnologia
 * CopyPolicy: Released under the terms of the LGPLv2.1 or later, see LGPL.TXT
 *
 */

/**
 * @page install_yarp_mac Installing YARP on macOS

\tableofcontents

\section install_mac_installation_prerequisites Installation prerequisites
This installation has been confirmed to work on OSX Mavericks and Yosemite with Homebrew.

\subsection install_mac_Xcode Installing Xcode

To compile anything on macOS (including YARP), you'll need to have <a href="http://developer.apple.com/xcode/"><b>Xcode</b></a> installed. This can be done through the <b>App Store</b>. 

Once installed, you need to install the <b>Command Line Tools</b>.
To do this, open Xcode, go to Xcode->Preferences->Downloads and install Command Line Tools.

If you do not see the option install Command Line Tools, run the following on a terminal

\code
xcode-select --install
\endcode

Once this is done, you can now continue with the installation steps:

\subsection install_mac_homebrew Installing Homebrew

Please install homebrew using the following commands or visit and follow the official <a href="http://brew.sh"><b>installation steps</b></a>

\code 
ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
\endcode

After the installation, you can run the following command to check if your setup has been successful:

\code
brew doctor
\endcode

If you had Homebrew already installed on your system, update and upgrade:

\code
brew update
brew upgrade
\endcode

Also, you will need to add the homebrew-x11 and homebrew-science taps:

\code
brew tap homebrew/x11
brew tap homebrew/science
\endcode

\section install_mac_Homebrew_YARP Installing YARP from Homebrew
The easiest way to install YARP is through Homebrew. 
 
\code
 brew install yarp
\endcode

The following options are also available:

\code
--with-lua
 	Build with Lua bindings
--with-python
  Build with Python bindings
--with-opencv
 	Build the opencv_grabber device
--with-qt5
 	Build the Qt5 GUI applications
--with-serial
 	Build the serial/serialport devices
--with-yarprun-log
 	Build with yarprun_log support
--HEAD
 	Install HEAD version
\endcode
 
After the installation, you will need to add the $YARP_DATA_DIRS environmental variable (in order to follow the KISS principle we are using the native mac editor Textedit. Please feel free to use whichever tool/editor you prefer):
 
\code
cd ~
open -a TextEdit .bash_profile
\endcode
 
If the following command result in an error: The file .... does not exist, do the following first:

\code
cd ~
touch .bash_profile
\endcode
 
and add the line:

\code
export YARP_DATA_DIRS=/usr/local/share/yarp
\endcode
 
To refresh and load these environment settings type:

\code
source ~/.bash_profile 
\endcode
 
Now you can proceed with the following link: \subpage check_your_installation.

\subsection install_mac_bash_completion_brew Bash completion
Installing YARP using Homebrew, the bash completion is automatically installed and enabled.

\section install_mac_from_source Install YARP from source
If the options above are not enough and you want to install YARP with additional options or in a difference location, you can compile it from source, directly from the repository.
 
\subsection install_mac_YARP_Dependencies Installing YARP Dependencies
Here we provide information for installing the <b>YARP dependencies</b> via <b>Homebrew</b>
In order to install the YARP dependencies enter the following command in a terminal:

\code
brew install yarp --only-dependencies
\endcode
 

For compiling the required bindings (LUA, JAVA, PYTHON etc) you need <b>swig</b>

\code
brew install swig
\endcode

For compiling the Qt5 GUIS:
\code
brew install qt5
\endcode

Now, add the <b>environmental variable</b> for Qt5

\code
cd ~
open -a TextEdit .bash_profile
\endcode

and copy the following line

\code
export Qt5_DIR=/usr/local/opt/qt5/lib/cmake
\endcode


\subsubsection install_mac_YARP_optional_GDK Optional: Installing YARP Dependencies: GDK PIXBUF 

Programs that require this <b>GDK PIXBUF</b> need to set the environment variable correctly. Just to be on the safe side add this to the .bash_profile

\code
cd ~
open -a TextEdit .bash_profile
\endcode

\code
export GDK_PIXBUF_MODULEDIR="/usr/local/lib/gdk-pixbuf-2.0/2.10.0/loaders"
\endcode

To refresh and load these environment settings type:

\code
source ~/.bash_profile 
\endcode


\subsection install_mac_YARP Installing YARP

In the directory where you would like to store your code, e.g. /Users/your_user_name/Dev/ run the following git command to clone YARP on your system

\code
git clone https://github.com/robotology/yarp.git
\endcode

\subsubsection install_mac_YARP_terminal Compile YARP using terminal:

\code
cd yarp
mkdir build
cd build
ccmake ..
\endcode

configure it correctly by enabling the following flags (simple solution):

\code
CREATE_GUIS
CREATE_LIB_MATH  
\endcode

configure & generate, then:

\code
make
\endcode

\subsubsection install_mac_YARP_Xcode Compile YARP using Xcode:

In order to generate and Xcode project do the following:

\code
cd yarp
mkdir build
cd build
ccmake .. -G Xcode
\endcode

This will generate a <b>YARP.xcodeproj</b> file which can be opened with Xcode.
Build it by clicking <b>Product -> Build</b> or <b>cmd+B</b> shortcut.
One can also compile the Release binaries by clicking <b>Product -> Archive</b>.

Alternatively, it is possible to directly compile the project on the command line by 
\code{.sh}
xcodebuild [-configuration Debug|Release|Other Configs] [-target ALL_BUILD|install|Other Targets]
\endcode
If no options are specified the ALL_BUILD target in Debug mode is compiled.

\subsubsection install_mac_YARP_Environment Setting YARP environmental Variables:

Once YARP has been compiled, you need to set its environmental variables:

\code
cd ~
open -a TextEdit .bash_profile
\endcode

and copy the following lines:

\code
export code=/Users/your_user_name/Dev
export YARP_ROOT=/Users/your_user_name/Dev/yarp
export YARP_DIR=/Users/your_user_name/Dev/yarp/build
export PATH=$YARP_DIR/bin/Release:$PATH 
\endcode

Notice that if you used the terminal version without Xcode the last line becomes:

\code
export PATH=$YARP_DIR/bin:$PATH
\endcode

Now setup YARP_DATA_DIRS by adding this to the .bash_profile:

\code
export YARP_DATA_DIRS=/Users/your_user_name/Dev/yarp/build/share/yarp
\endcode

To refresh and load these environment settings type:

\code
source ~/.bash_profile 
\endcode

Now to quickly test the system run this in a terminal:

\code
yarp
\endcode

and you should get something like:

\code
This is the YARP network companion.
Call with the argument "help" to see a list of ways to use this program.
\endcode

\section install_mac_bash_completion_source Bash completion
To enable bash completion when building YARP from source, do the following:

\code
brew install bash-completion
\endcode

Then add the following lines to your .bash_profile:

\code
if [ -f `brew --prefix`/etc/bash_completion ]; then
      . `brew --prefix`/etc/bash_completion
fi
source $YARP_ROOT/scripts/yarp_completion
\endcode


*/



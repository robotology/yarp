/**
 * @page simple_modification An example which shows how to use a Lua script to modify incoming data in an input port

\author Ali Paikan

\section simple_modification_desc Description
This example demonstrates how to simply use the port monitor carrier to modify data going through a connection. The port '/write' from 'yarp write' module is connected to the '/read' port of 'yarp read' using a portmonitor plugged into the receiver side. The portmoniotr loads a Lua script (\c 'bot_modifier.lua') in which we access and modify the data going through through the port.

<br>

\image html simple_modification.png ""

\section simple_modification_req Requirements
\li Enable and compile portmonitor carrier (ENABLE_yarpcar_portmonitor_carrier=ON in YARP cmake).

\li Compile Yarp with Lua binding support (see \ref yarp_swig "Using YARP from python, java, ruby, C#, and other languages").

\li Set LUA_CPATH to include Yarp-Lua binding library  (e.g., export LUA_CPATH=";;;$YARP_ROOT/build/lib/lua/?.so")


\section simple_modification_running Running the example

\li Open a terminal and run yarpserver
\verbatim
   $ yarpserver
\endverbatim

\li Open another terminal (lets call this the sender terminal) and type
\verbatim
   $ yarp write /write
\endverbatim

\li Open another terminal (lets call this the receiver terminal) )and change to the 'simple_modification' directory:
\verbatim
   $ cd $YARP_ROOT/example/portmonitor/simple_modification
   $ yarp read /read
\endverbatim

\li In another terminal connect the port as follow
\verbatim
   $ yarp connect /write /read tcp+recv.portmonitor+type.lua+file.bot_modifier
\endverbatim

Now if you write something  in the 'sender' terminal, you will see the text "modified from Lua" will be added to the original message. For example:
\verbatim
[sender terminal]
 Hello
\endverbatim

\verbatim
[receiver terminal]
 Hello "modified from Lua"
\endverbatim

As it is constrained in this PortMonitor.accept() method, If you type "ignore", the word will never be delivered to the input port.

\htmlonly

\section simple_modification_scripts Scripts

\subsection simple_modification_bot_modifier bot_modifier.lua
<pre style="background:#fff;color:#000"><span style="color:#00b418">-- loading lua-yarp binding library</span>
<span style="color:#3c4c72;font-weight:700">require</span>(<span style="color:#d80800">"yarp"</span>)

<pre style="background:#fff;color:#000"><span style="color:#00b418">--</span>
<span style="color:#00b418">-- accept is called when the port receives new data</span>
<span style="color:#00b418">-- @param thing The Things abstract data type</span>
<span style="color:#00b418">-- @return Boolean</span>
<span style="color:#00b418">-- if false is returned, the data will be ignored </span>
<span style="color:#00b418">-- and update() will never be called</span>
PortMonitor.accept <span style="color:#0100b6;font-weight:700">=</span> <span style="color:#0100b6;font-weight:700">function</span>(thing)
    <span style="color:#0100b6;font-weight:700">if</span> thing:asBottle():toString() <span style="color:#0100b6;font-weight:700">==</span> <span style="color:#d80800">"ignore"</span> <span style="color:#0100b6;font-weight:700">then</span>
        <span style="color:#0100b6;font-weight:700">return</span> <span style="color:#585cf6;font-style:italic">false</span>
    <span style="color:#0100b6;font-weight:700">end</span>
    <span style="color:#0100b6;font-weight:700">return</span> <span style="color:#585cf6;font-style:italic">true</span>
<span style="color:#0100b6;font-weight:700">end</span>

<span style="color:#00b418">--</span>
<span style="color:#00b418">-- update is called when the port receives new data</span>
<span style="color:#00b418">-- @param thing The Things abstract data type</span>
<span style="color:#00b418">-- @return Things</span>
PortMonitor.update <span style="color:#0100b6;font-weight:700">=</span> <span style="color:#0100b6;font-weight:700">function</span>(thing)
    bt <span style="color:#0100b6;font-weight:700">=</span> thing:asBottle()
    bt:addString(<span style="color:#d80800">"modified from Lua :)"</span>)
    <span style="color:#0100b6;font-weight:700">return</span> thing
<span style="color:#0100b6;font-weight:700">end</span>

</pre>
\endhtmlonly

*/

/**
 * @page image_modification An example which shows how to use a Lua script to modify image data

\author Ali Paikan

\section image_modification_desc Description
This example demonstrates how to access the YARP image data using port monitor and modify it. It also shows how to use YARP administrative port to pass some parameters to the Lua script in the port monitor.

<br>

\image html image_modification.png ""


\section image_modification_req Requirements
\li Enable and compile portmonitor carrier (ENABLE_yarpcar_portmonitor_carrier=ON in YARP cmake).

\li Compile Yarp with Lua binding support (see \ref yarp_swig "Using YARP from python, java, ruby, C#, and other languages").

\li Set LUA_CPATH to include Yarp-Lua binding library  (e.g., export LUA_CPATH=";;;$YARP_ROOT/build/lib/lua/?.so")


\section image_modification_running Running the example

\li Open a terminal and run yarpserver
\verbatim
   $ yarpserver
\endverbatim

\li Open another terminal (lets call this the receiver terminal) )and change to the 'image_modification' directory and run the application using yarpmanager:
\verbatim
   $ cd $YARP_ROOT/example/portmonitor/image_modification
   $ yarpmanager-console --application TestMonitorImage.xml
\endverbatim


\li run the modues and connect the ports
\verbatim
   >> run
   >> connect
\endverbatim

You should see two instances of yarpview showing the original image from fake test grabber and the modified one using Lua script (i.e. the Lua script draws moving circular points over the original image)

\li You can also change the foreground and background point's color using YARP port administrator. To do this, open another terminal and try the following commands:
\verbatim
    $ yarp admin rpc /modified/yarpview/img:i
    $ set in /grabber (fg 0 255 0)      // this set the foreground color to Green (0 G 0)
    $ set in /grabber (bg 0 0 255)      // this set the foreground color to Blue (0 0 B)
    $ get in /grabber                   // will show the parameter's value
\endverbatim


\li To stop the application, in the yarpmanager's console, type:
\verbatim
    >> stop
    >> exit
\endverbatim


\htmlonly

\section image_modification_scripts Scripts

\subsection image_modification_img_modifier img_modifier.lua

<pre style="background:#fff;color:#000"><span style="color:#00b418">-- loading lua-yarp binding library</span>
<span style="color:#3c4c72;font-weight:700">require</span>(<span style="color:#d80800">"yarp"</span>)

<span style="color:#00b418">--</span>
<span style="color:#00b418">-- create is called when the port monitor is created </span>
<span style="color:#00b418">-- @return Boolean</span>
<span style="color:#00b418">--</span>
PortMonitor.create <span style="color:#0100b6;font-weight:700">=</span> <span style="color:#0100b6;font-weight:700">function</span>(options)
    <span style="color:#3c4c72;font-weight:700">print</span>(<span style="color:#d80800">"on create"</span>)
    PortMonitor.index <span style="color:#0100b6;font-weight:700">=</span> <span style="color:#cd0000;font-style:italic">0</span>;
    PortMonitor.bdraw <span style="color:#0100b6;font-weight:700">=</span> <span style="color:#585cf6;font-style:italic">true</span>
    PortMonitor.bg <span style="color:#0100b6;font-weight:700">=</span> {r<span style="color:#0100b6;font-weight:700">=</span><span style="color:#cd0000;font-style:italic">255</span>, g<span style="color:#0100b6;font-weight:700">=</span><span style="color:#cd0000;font-style:italic">255</span>, b<span style="color:#0100b6;font-weight:700">=</span><span style="color:#cd0000;font-style:italic">255</span>}
    PortMonitor.fg <span style="color:#0100b6;font-weight:700">=</span> {r<span style="color:#0100b6;font-weight:700">=</span><span style="color:#cd0000;font-style:italic">255</span>, g<span style="color:#0100b6;font-weight:700">=</span><span style="color:#cd0000;font-style:italic">0</span>, b<span style="color:#0100b6;font-weight:700">=</span><span style="color:#cd0000;font-style:italic">0</span>}
    PortMonitor.time <span style="color:#0100b6;font-weight:700">=</span> yarp.Time_now()
    <span style="color:#0100b6;font-weight:700">return</span> <span style="color:#585cf6;font-style:italic">true</span>;
<span style="color:#0100b6;font-weight:700">end</span>

<span style="color:#00b418">--</span>
<span style="color:#00b418">-- update is called when the port receives new data</span>
<span style="color:#00b418">-- @param thing The Things abstract data type</span>
<span style="color:#00b418">-- @return Things</span>
PortMonitor.update <span style="color:#0100b6;font-weight:700">=</span> <span style="color:#0100b6;font-weight:700">function</span>(thing)
    img_out <span style="color:#0100b6;font-weight:700">=</span> thing:asImageOfPixelRgb()
    w <span style="color:#0100b6;font-weight:700">=</span> img_out:width()
    h <span style="color:#0100b6;font-weight:700">=</span> img_out:height()
    r <span style="color:#0100b6;font-weight:700">=</span> <span style="color:#3c4c72;font-weight:700">math.min</span>(w,h) <span style="color:#0100b6;font-weight:700">/</span> <span style="color:#cd0000;font-style:italic">2</span>
    r <span style="color:#0100b6;font-weight:700">=</span> r <span style="color:#0100b6;font-weight:700">-</span> r<span style="color:#0100b6;font-weight:700">/</span><span style="color:#cd0000;font-style:italic">4</span>
    <span style="color:#0100b6;font-weight:700">for</span> i<span style="color:#0100b6;font-weight:700">=</span><span style="color:#cd0000;font-style:italic">0</span>,<span style="color:#cd0000;font-style:italic">2</span><span style="color:#0100b6;font-weight:700">*</span><span style="color:#585cf6;font-style:italic">math.pi</span>,<span style="color:#585cf6;font-style:italic">math.pi</span><span style="color:#0100b6;font-weight:700">/</span><span style="color:#cd0000;font-style:italic">32</span> <span style="color:#0100b6;font-weight:700">do</span>
        x <span style="color:#0100b6;font-weight:700">=</span> <span style="color:#3c4c72;font-weight:700">math.floor</span>(w<span style="color:#0100b6;font-weight:700">/</span><span style="color:#cd0000;font-style:italic">2</span> <span style="color:#0100b6;font-weight:700">+</span> r <span style="color:#0100b6;font-weight:700">*</span> <span style="color:#3c4c72;font-weight:700">math.cos</span>(i))
        y <span style="color:#0100b6;font-weight:700">=</span> <span style="color:#3c4c72;font-weight:700">math.floor</span>(h<span style="color:#0100b6;font-weight:700">/</span><span style="color:#cd0000;font-style:italic">2</span> <span style="color:#0100b6;font-weight:700">+</span> r <span style="color:#0100b6;font-weight:700">*</span> <span style="color:#3c4c72;font-weight:700">math.sin</span>(i))
        <span style="color:#0100b6;font-weight:700">if</span> PortMonitor.bdraw <span style="color:#0100b6;font-weight:700">==</span> <span style="color:#585cf6;font-style:italic">true</span> <span style="color:#0100b6;font-weight:700">then</span>
            img_out:pixel(x, y).r <span style="color:#0100b6;font-weight:700">=</span> PortMonitor.bg.r
            img_out:pixel(x, y).g <span style="color:#0100b6;font-weight:700">=</span> PortMonitor.bg.g
            img_out:pixel(x, y).b <span style="color:#0100b6;font-weight:700">=</span> PortMonitor.bg.b
        <span style="color:#0100b6;font-weight:700">else</span>
            img_out:pixel(x, y).r <span style="color:#0100b6;font-weight:700">=</span> PortMonitor.fg.r
            img_out:pixel(x, y).g <span style="color:#0100b6;font-weight:700">=</span> PortMonitor.fg.g
            img_out:pixel(x, y).b <span style="color:#0100b6;font-weight:700">=</span> PortMonitor.fg.b
        <span style="color:#0100b6;font-weight:700">end</span>
    <span style="color:#0100b6;font-weight:700">end</span>

    <span style="color:#0100b6;font-weight:700">for</span> i<span style="color:#0100b6;font-weight:700">=</span><span style="color:#cd0000;font-style:italic">0</span>,PortMonitor.index,<span style="color:#585cf6;font-style:italic">math.pi</span><span style="color:#0100b6;font-weight:700">/</span><span style="color:#cd0000;font-style:italic">32</span> <span style="color:#0100b6;font-weight:700">do</span>
        x <span style="color:#0100b6;font-weight:700">=</span> <span style="color:#3c4c72;font-weight:700">math.floor</span>(w<span style="color:#0100b6;font-weight:700">/</span><span style="color:#cd0000;font-style:italic">2</span> <span style="color:#0100b6;font-weight:700">+</span> r <span style="color:#0100b6;font-weight:700">*</span> <span style="color:#3c4c72;font-weight:700">math.cos</span>(i))
        y <span style="color:#0100b6;font-weight:700">=</span> <span style="color:#3c4c72;font-weight:700">math.floor</span>(h<span style="color:#0100b6;font-weight:700">/</span><span style="color:#cd0000;font-style:italic">2</span> <span style="color:#0100b6;font-weight:700">+</span> r <span style="color:#0100b6;font-weight:700">*</span> <span style="color:#3c4c72;font-weight:700">math.sin</span>(i))
        <span style="color:#0100b6;font-weight:700">if</span> PortMonitor.bdraw <span style="color:#0100b6;font-weight:700">==</span> <span style="color:#585cf6;font-style:italic">true</span> <span style="color:#0100b6;font-weight:700">then</span>
            img_out:pixel(x, y).r <span style="color:#0100b6;font-weight:700">=</span> PortMonitor.fg.r
            img_out:pixel(x, y).g <span style="color:#0100b6;font-weight:700">=</span> PortMonitor.fg.g
            img_out:pixel(x, y).b <span style="color:#0100b6;font-weight:700">=</span> PortMonitor.fg.b
        <span style="color:#0100b6;font-weight:700">else</span>
            img_out:pixel(x, y).r <span style="color:#0100b6;font-weight:700">=</span> PortMonitor.bg.r
            img_out:pixel(x, y).g <span style="color:#0100b6;font-weight:700">=</span> PortMonitor.bg.g
            img_out:pixel(x, y).b <span style="color:#0100b6;font-weight:700">=</span> PortMonitor.bg.b
        <span style="color:#0100b6;font-weight:700">end</span>
    <span style="color:#0100b6;font-weight:700">end</span>

    t <span style="color:#0100b6;font-weight:700">=</span> yarp.Time_now()
    <span style="color:#0100b6;font-weight:700">if</span> (t<span style="color:#0100b6;font-weight:700">-</span>PortMonitor.time) <span style="color:#0100b6;font-weight:700">>=</span> <span style="color:#cd0000;font-style:italic">0.1</span> <span style="color:#0100b6;font-weight:700">then</span>
        <span style="color:#0100b6;font-weight:700">if</span> PortMonitor.index <span style="color:#0100b6;font-weight:700">>=</span> <span style="color:#cd0000;font-style:italic">2</span><span style="color:#0100b6;font-weight:700">*</span><span style="color:#585cf6;font-style:italic">math.pi</span> <span style="color:#0100b6;font-weight:700">then</span>
            PortMonitor.index <span style="color:#0100b6;font-weight:700">=</span> <span style="color:#cd0000;font-style:italic">0</span>
            <span style="color:#0100b6;font-weight:700">if</span> PortMonitor.bdraw <span style="color:#0100b6;font-weight:700">==</span> <span style="color:#585cf6;font-style:italic">true</span> <span style="color:#0100b6;font-weight:700">then</span>
                PortMonitor.bdraw <span style="color:#0100b6;font-weight:700">=</span> <span style="color:#585cf6;font-style:italic">false</span>
            <span style="color:#0100b6;font-weight:700">else</span>
                PortMonitor.bdraw <span style="color:#0100b6;font-weight:700">=</span> <span style="color:#585cf6;font-style:italic">true</span>
            <span style="color:#0100b6;font-weight:700">end</span>
        <span style="color:#0100b6;font-weight:700">else</span>
            PortMonitor.index <span style="color:#0100b6;font-weight:700">=</span> PortMonitor.index <span style="color:#0100b6;font-weight:700">+</span> <span style="color:#585cf6;font-style:italic">math.pi</span><span style="color:#0100b6;font-weight:700">/</span><span style="color:#cd0000;font-style:italic">32</span>
        <span style="color:#0100b6;font-weight:700">end</span>
        PortMonitor.time <span style="color:#0100b6;font-weight:700">=</span> t
    <span style="color:#0100b6;font-weight:700">end</span>

    <span style="color:#0100b6;font-weight:700">return</span> thing
<span style="color:#0100b6;font-weight:700">end</span>


<span style="color:#00b418">--</span>
<span style="color:#00b418">-- setparam is called on setCarrierParams by the port administrator  </span>
<span style="color:#00b418">-- @param property The Property</span>
<span style="color:#00b418">--</span>
PortMonitor.setparam <span style="color:#0100b6;font-weight:700">=</span> <span style="color:#0100b6;font-weight:700">function</span>(property)
    bt <span style="color:#0100b6;font-weight:700">=</span> property:findGroup(<span style="color:#d80800">"bg"</span>, <span style="color:#d80800">"background color"</span>)
    <span style="color:#0100b6;font-weight:700">if</span> bt:isNull() <span style="color:#0100b6;font-weight:700">~=</span> <span style="color:#585cf6;font-style:italic">true</span> <span style="color:#0100b6;font-weight:700">then</span>
        <span style="color:#0100b6;font-weight:700">if</span> bt:size() <span style="color:#0100b6;font-weight:700">>=</span><span style="color:#cd0000;font-style:italic">4</span>  <span style="color:#0100b6;font-weight:700">then</span>
            PortMonitor.bg.r <span style="color:#0100b6;font-weight:700">=</span> bt:get(<span style="color:#cd0000;font-style:italic">1</span>):asInt()
            PortMonitor.bg.g <span style="color:#0100b6;font-weight:700">=</span> bt:get(<span style="color:#cd0000;font-style:italic">2</span>):asInt()
            PortMonitor.bg.b <span style="color:#0100b6;font-weight:700">=</span> bt:get(<span style="color:#cd0000;font-style:italic">3</span>):asInt()
        <span style="color:#0100b6;font-weight:700">end</span>
    <span style="color:#0100b6;font-weight:700">end</span>
    bt <span style="color:#0100b6;font-weight:700">=</span> property:findGroup(<span style="color:#d80800">"fg"</span>, <span style="color:#d80800">"forground color"</span>)
    <span style="color:#0100b6;font-weight:700">if</span> bt:isNull() <span style="color:#0100b6;font-weight:700">~=</span> <span style="color:#585cf6;font-style:italic">true</span> <span style="color:#0100b6;font-weight:700">then</span>
        <span style="color:#0100b6;font-weight:700">if</span> bt:size() <span style="color:#0100b6;font-weight:700">>=</span><span style="color:#cd0000;font-style:italic">4</span>  <span style="color:#0100b6;font-weight:700">then</span>
            PortMonitor.fg.r <span style="color:#0100b6;font-weight:700">=</span> bt:get(<span style="color:#cd0000;font-style:italic">1</span>):asInt()
            PortMonitor.fg.g <span style="color:#0100b6;font-weight:700">=</span> bt:get(<span style="color:#cd0000;font-style:italic">2</span>):asInt()
            PortMonitor.fg.b <span style="color:#0100b6;font-weight:700">=</span> bt:get(<span style="color:#cd0000;font-style:italic">3</span>):asInt()
        <span style="color:#0100b6;font-weight:700">end</span>
    <span style="color:#0100b6;font-weight:700">end</span>
<span style="color:#0100b6;font-weight:700">end</span>


<span style="color:#00b418">--</span>
<span style="color:#00b418">-- getparan is called on getCarrierParams by the port administrator</span>
<span style="color:#00b418">-- @return property The Property</span>
<span style="color:#00b418">--</span>
PortMonitor.getparam <span style="color:#0100b6;font-weight:700">=</span> <span style="color:#0100b6;font-weight:700">function</span>()

    property <span style="color:#0100b6;font-weight:700">=</span> yarp.Property()
    bt <span style="color:#0100b6;font-weight:700">=</span> yarp.Bottle()
    bg <span style="color:#0100b6;font-weight:700">=</span> bt:addList()
    bg:addString(<span style="color:#d80800">"bg"</span>)
    bg:addInt(PortMonitor.bg.r)
    bg:addInt(PortMonitor.bg.g)
    bg:addInt(PortMonitor.bg.b)
    fg <span style="color:#0100b6;font-weight:700">=</span> bt:addList()
    fg:addString(<span style="color:#d80800">"fg"</span>)
    fg:addInt(PortMonitor.fg.r)
    fg:addInt(PortMonitor.fg.g)
    fg:addInt(PortMonitor.fg.b)
    property:fromString(bt:toString())
    <span style="color:#0100b6;font-weight:700">return</span> property
<span style="color:#0100b6;font-weight:700">end</span>

</pre>
\endhtmlonly

*/
